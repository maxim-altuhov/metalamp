//-  
  const options = { 
    name: {
      value: Number,
      colors: ['#FFE39C', '#FFBA9C'],
    },
  };

mixin diagram(options = {})
  - const ratingArray = [];
  - Object.values(options).forEach((elem) => ratingArray.push(elem.value));

  .diagram.js-diagram(data-rating=ratingArray)
    figure.diagram__wrapper
      .diagram__rating-block
        svg(class="diagram__rating" width="100%" height="100%" viewBox="0 0 34 34")
          defs
            - let scoreID = 0
            each object, name in options
              lineargradient(id=`score-${scoreID}` x2="0" y2="100%")
                stop(offset="0%" stop-color=object.colors[0])
                stop(offset="100%" stop-color=(object.colors[1] || object.colors[0]))
              - scoreID += 1
          circle.diagram__hole(cx="17" cy="17" r="15.91549430918954" fill="#fff")
          circle.diagram__ring(cx="17" cy="17" r="15.91549430918954" fill="transparent" stroke="#fff" stroke-width="1")
          - let scoreLinkID = 0
          each object, name in options
            circle.diagram__segment.js-diagram__segment(cx="17" cy="17" r="15.91549430918954" fill="transparent" stroke=`url(#score-${scoreLinkID})` stroke-width="1.2" stroke-dasharray="25 75" stroke-dashoffset="75" data-current-rating=object.value data-index=scoreLinkID)
            - scoreLinkID += 1
          g.diagram__text.js-diagram__text
            text.diagram__number.js-diagram__number(x="50%" y="50%") 0
            text.diagram__label.js-diagram__label(x="50%" y="50%") голосов
      figcaption.diagram__legend-block
        ul.diagram__legend-list(aria-hidden="true" role="presentation")
          - index = 0
          each object, name in options
            li.diagram__legend-item.js-diagram__legend-item(data-current-rating=object.value data-index=index)
              span(class="diagram__legend-point" style=`background: linear-gradient(180deg, ${object.colors[0]} 0%, ${object.colors[1] || object.colors[0]} 100%)`) 
              | #{name}
            - index += 1