//-
  const options = {
    theme: "transparent" || "simple" || "with-arrow",
    text: String,
    btnType: "button" || "submit" || "reset",
    isLink: Boolean,
    href: String,
    btnFunction: "clear" || "apply" || undefined,
    isHoverState: Boolean,
  };
mixin button(options = {})
  - 
    const {
      theme,
      text = "",
      btnType = "button",
      isLink = false,
      href = "/mock-address/change-me",
      btnFunction,
      isHoverState = false
    } = options;

    const themeModifiers = {
      transparent: 'button_transparent',
      simple: 'button_simple',
      'with-arrow': 'button_with-arrow',
    };
    
    let classWithHover;

  if isHoverState && !theme
    - classWithHover = "button_with-hover";
  else if isHoverState && themeModifiers[theme]
    - classWithHover = `${themeModifiers[theme]}-with-hover`;

  if isLink
    a(class=`button ${themeModifiers[theme]} ${classWithHover}` href= href)
      span.button__text= text
  else
    button(class=`button ${themeModifiers[theme]} ${classWithHover}` type= btnType data-function= btnFunction)
      span.button__text= text